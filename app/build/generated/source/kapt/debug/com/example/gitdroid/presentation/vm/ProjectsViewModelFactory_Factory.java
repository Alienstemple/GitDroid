// Generated by Dagger (https://dagger.dev).
package com.example.gitdroid.presentation.vm;

import com.example.gitdroid.domain.projects.ProjectsInteractor;
import com.example.gitdroid.presentation.vm.projects.ProjectsViewModelFactory;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ProjectsViewModelFactory_Factory implements Factory<ProjectsViewModelFactory> {
  private final Provider<ProjectsInteractor> projectsInteractorProvider;

  public ProjectsViewModelFactory_Factory(Provider<ProjectsInteractor> projectsInteractorProvider) {
    this.projectsInteractorProvider = projectsInteractorProvider;
  }

  @Override
  public ProjectsViewModelFactory get() {
    return newInstance(projectsInteractorProvider.get());
  }

  public static ProjectsViewModelFactory_Factory create(
      Provider<ProjectsInteractor> projectsInteractorProvider) {
    return new ProjectsViewModelFactory_Factory(projectsInteractorProvider);
  }

  public static ProjectsViewModelFactory newInstance(ProjectsInteractor projectsInteractor) {
    return new ProjectsViewModelFactory(projectsInteractor);
  }
}
